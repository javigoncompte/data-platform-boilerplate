# The name of the bundle. run `databricks bundle schema` to see the full bundle settings schema.
bundle:
  # Do not modify the below line, this autogenerated field is used by the Databricks backend.
  uuid: {{ bundle_uuid }}

  name: {{ .input_project_name }}

variables:
  experiment_name:
    description: Experiment name for the model training.
    default: /Users/${workspace.current_user.userName}/${bundle.target}-{{template `experiment_base_name` .}}
  model_name:
    description: Model name for the model training.
    {{ if (eq .input_include_models_in_unity_catalog `no`) }}default: ${bundle.target}-{{template `model_name` .}}
    {{- else -}}default: {{template `model_name` .}}{{end}}
  {{ if (eq .input_include_models_in_unity_catalog `yes`) }}catalog_name:
    description: The catalog name to save the trained model{{end}}
    
include:
  # Resources folder contains ML artifact resources for the ML project that defines model and experiment
  # And workflows resources for the ML project including model training -> validation -> deployment,
  # {{- if (eq .input_include_feature_store `yes`) }} feature engineering, {{ end }} batch inference, quality monitoring, metric refresh, alerts and triggering retraining
  - ./resources/batch-inference-workflow-resource.yml
  - ./resources/ml-artifacts-resource.yml
  - ./resources/model-workflow-resource.yml
  {{- if (eq .input_include_feature_store `yes`) }}
  - ./resources/feature-engineering-workflow-resource.yml
  {{- end }}
  # TODO: uncomment once monitoring inference table has been created
  # - ./resources/monitoring-resource.yml

# Deployment Target specific values for workspace
targets:
  dev: {{ if (eq .input_include_models_in_unity_catalog `yes`)}} # UC Catalog Name {{ end }}
    mode: development
    default: true
    {{- if (eq .input_include_models_in_unity_catalog `yes`)}}
    variables:
      catalog_name: dev
    {{- end}}
    workspace:
      # TODO: add dev workspace URL
      host:

{{- if (eq .input_setup_cicd_and_project `CICD_and_Project`)}}

  staging:
    {{- if (eq .input_include_models_in_unity_catalog `yes`) }}
    variables:
      catalog_name: {{ .input_staging_catalog_name }}
    {{- end}}
    workspace:
      host: {{template `databricks_staging_workspace_host` .}}

  prod:
    {{- if (eq .input_include_models_in_unity_catalog `yes`)}}
    variables:
      catalog_name: {{ .input_prod_catalog_name }}
    {{- end}}
    workspace:
      host: {{template `databricks_prod_workspace_host` .}}

  test:
    {{- if (eq .input_include_models_in_unity_catalog `yes`)}}
    variables:
      catalog_name: {{ .input_test_catalog_name }}
    {{- end}}
    workspace:
      host: {{template `databricks_staging_workspace_host` .}}
{{ end }}